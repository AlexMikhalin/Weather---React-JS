{"ast":null,"code":"var _jsxFileName = \"D:\\\\repos\\\\weather\\\\src\\\\App.js\";\nimport React from 'react';\nimport Info from './components/info';\nimport Weather from './components/weather';\nimport Form from './components/form';\nconst API_KEY = \"785d769db8bc81a43fbf90c35f182125\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temp: undefined,\n      city: undefined,\n      country: undefined,\n      pressure: undefined,\n      sunset: undefined,\n      error: undefined\n    };\n\n    this.gettingWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n\n      if (city) {\n        const api_url = await fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&appid=\").concat(API_KEY, \"&units=metric\"));\n        const data = await api_url.json();\n        var sunset = data.sys.sunset;\n        var date = new Date();\n        date.setTime(sunset);\n        var sunset_date = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\n        this.setState({\n          temp: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          pressure: data.main.pressure,\n          sunset: sunset_date,\n          error: \"\"\n        });\n      } else {\n        this.setState({\n          temp: undefined,\n          city: undefined,\n          country: undefined,\n          pressure: undefined,\n          sunset: undefined,\n          error: \"Enter the name of city\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Info, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Form, {\n      weatherMethod: this.gettingWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      temp: this.state.temp,\n      city: this.state.city,\n      country: this.state.country,\n      pressure: this.state.pressure,\n      sunset: this.state.sunset,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:\\repos\\weather\\src\\App.js"],"names":["React","Info","Weather","Form","API_KEY","App","Component","state","temp","undefined","city","country","pressure","sunset","error","gettingWeather","e","preventDefault","target","elements","value","api_url","fetch","data","json","sys","date","Date","setTime","sunset_date","getHours","getMinutes","getSeconds","setState","main","name","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AACNC,MAAAA,IAAI,EAAEC,SADA;AAENC,MAAAA,IAAI,EAAED,SAFA;AAGNE,MAAAA,OAAO,EAAEF,SAHH;AAING,MAAAA,QAAQ,EAAEH,SAJJ;AAKNI,MAAAA,MAAM,EAAEJ,SALF;AAMNK,MAAAA,KAAK,EAAEL;AAND,KAFwB;;AAAA,SAWhCM,cAXgC,GAWf,MAAMC,CAAN,IAAY;AAC3BA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMP,IAAI,GAAGM,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBT,IAAlB,CAAuBU,KAApC;;AAEA,UAAGV,IAAH,EAAS;AACP,cAAMW,OAAO,GAAG,MAChBC,KAAK,6DAAsDZ,IAAtD,oBAAoEN,OAApE,mBADL;AAEA,cAAMmB,IAAI,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAnB;AAEA,YAAIX,MAAM,GAAGU,IAAI,CAACE,GAAL,CAASZ,MAAtB;AACA,YAAIa,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACAD,QAAAA,IAAI,CAACE,OAAL,CAAaf,MAAb;AACA,YAAIgB,WAAW,GAAGH,IAAI,CAACI,QAAL,KAAiB,GAAjB,GAAuBJ,IAAI,CAACK,UAAL,EAAvB,GAA2C,GAA3C,GAAiDL,IAAI,CAACM,UAAL,EAAnE;AAEA,aAAKC,QAAL,CAAc;AACdzB,UAAAA,IAAI,EAAEe,IAAI,CAACW,IAAL,CAAU1B,IADF;AAEdE,UAAAA,IAAI,EAAEa,IAAI,CAACY,IAFG;AAGdxB,UAAAA,OAAO,EAAEY,IAAI,CAACE,GAAL,CAASd,OAHJ;AAIdC,UAAAA,QAAQ,EAAEW,IAAI,CAACW,IAAL,CAAUtB,QAJN;AAKdC,UAAAA,MAAM,EAAEgB,WALM;AAMdf,UAAAA,KAAK,EAAE;AANO,SAAd;AAQH,OAlBC,MAkBK;AACH,aAAKmB,QAAL,CAAc;AACZzB,UAAAA,IAAI,EAAEC,SADM;AAEZC,UAAAA,IAAI,EAAED,SAFM;AAGZE,UAAAA,OAAO,EAAEF,SAHG;AAIZG,UAAAA,QAAQ,EAAEH,SAJE;AAKZI,UAAAA,MAAM,EAAEJ,SALI;AAMZK,UAAAA,KAAK,EAAE;AANK,SAAd;AAQF;AACD,KA3C+B;AAAA;;AA6ChCsB,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAM,MAAA,aAAa,EAAE,KAAKrB,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,OAAD;AACA,MAAA,IAAI,EAAE,KAAKR,KAAL,CAAWC,IADjB;AAEA,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWG,IAFjB;AAGA,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWI,OAHpB;AAIA,MAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWK,QAJrB;AAKA,MAAA,MAAM,EAAE,KAAKL,KAAL,CAAWM,MALnB;AAMA,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWO,KANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAcD;;AA5D+B;;AA+DlC,eAAeT,GAAf","sourcesContent":["import React from 'react';\nimport Info from './components/info';\nimport Weather from './components/weather';\nimport Form from './components/form';\n\nconst API_KEY = \"785d769db8bc81a43fbf90c35f182125\"; \n\nclass App extends React.Component {\n\n  state = {\n    temp: undefined,\n    city: undefined,\n    country: undefined,\n    pressure: undefined,\n    sunset: undefined,\n    error: undefined\n  }\n\n  gettingWeather = async(e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    \n    if(city) {\n      const api_url = await \n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n      const data = await api_url.json();\n    \n      var sunset = data.sys.sunset;\n      var date = new Date();\n      date.setTime(sunset);\n      var sunset_date = date.getHours()+ \":\" + date.getMinutes() + \":\" + date.getSeconds();\n\n      this.setState({\n      temp: data.main.temp,\n      city: data.name,\n      country: data.sys.country,\n      pressure: data.main.pressure,\n      sunset: sunset_date,\n      error: \"\"\n    });\n  } else {\n      this.setState({\n        temp: undefined,\n        city: undefined,\n        country: undefined,\n        pressure: undefined,\n        sunset: undefined,\n        error: \"Enter the name of city\"\n    });\n   } \n  }\n\n  render() {\n    return (\n      <div>\n        <Info />\n        <Form weatherMethod={this.gettingWeather} />\n        <Weather \n        temp={this.state.temp}\n        city={this.state.city}\n        country={this.state.country}\n        pressure={this.state.pressure}\n        sunset={this.state.sunset}\n        error={this.state.error}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}